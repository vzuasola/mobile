# Git clone
# composer install
# yarn install && yarn build
# zip
# upload to artifactory

FROM php:7.2-alpine

RUN apk add --no-cache openssh-client git
RUN mkdir -p -m 0700 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts

COPY --from=composer:1.5 /usr/bin/composer /usr/bin/composer
RUN ssh-keyscan gitlab.com >> /root/.ssh/known_hosts
RUN mkdir /var/www/html/app
WORKDIR /var/www/html/app
COPY composer.* .
RUN --mount=type=ssh composer install --no-interaction --no-dev --optimize-autoloader --profile

FROM node:11
WORKDIR /var/www/html/app
COPY package.json package.json
COPY yarn.lock yarn.lock
RUN yarn install

FROM node:11
WORKDIR /var/www/html/app
COPY --from=1 /var/www/html/app/node_modules ./node_modules
COPY --from=0 /var/www/html/app/core ./core
COPY --from=0 /var/www/html/app/vendor ./vendor
COPY assets ./assets
COPY src ./src
COPY web/app.php ./web/app.php
COPY web/index.php ./web/index.php
COPY web/data.json ./web/data.json
COPY web/version.json ./web/version.json
COPY templates ./templates
COPY app ./app
COPY cache ./cache
COPY logs ./logs
COPY package.json package.json
COPY webpack.config.js webpack.config.js
COPY tsconfig.json tsconfig.json
RUN yarn run dist
WORKDIR /var/www/html/
ARG PACKAGE_VERSION
ARG ARTIFACTORY_PASSWORD
ARG CI_PROJECT_NAME
ARG ARTIFACTORY_URL
RUN tar -czf ${CI_PROJECT_NAME}-${PACKAGE_VERSION}.tar.gz -C app .
COPY automation/upload_to_artifactory.sh upload_to_artifactory.sh
RUN ./upload_to_artifactory.sh
